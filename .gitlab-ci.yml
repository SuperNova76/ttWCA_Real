stages:
  - build
  - run
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SSL_NO_VERIFY: "true"
  PACKAGE_NAME: ttWCA
  BUILD_DIR: build
  RUN_DIR: run
  ATLAS_LOCAL_ROOT_BASE: /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
  ACMSOURCEDIR: ${CI_PROJECT_DIR}/${PACKAGE_NAME}
  SAMPLE_NAME: root://eosuser.cern.ch///eos/user/f/fcardill/CI_Top/mc16_13TeV.410218.aMcAtNloPythia8EvtGen_MEN30NLO_A14N23LO_ttee.deriv.DAOD_TOPQ1.e5070_s3126_r10724_p4514/DAOD_TOPQ1.25526247._000113.pool.root.1
  NTUP_NAME: root://eosuser.cern.ch///eos/user/f/fcardill/CI_Top/Ntup_data/data.root
  
.analysis_image: &image
  image: atlas/analysisbase:21.2.178
  tags:
    - cvmfs
  before_script:
    - pwd
    - ls
    - echo "Project Directory ${CI_PROJECT_DIR}"
    - echo "Build Directory   ${BUILD_DIR}"
    - echo "Run Directory     ${RUN_DIR}"
    - source /home/atlas/release_setup.sh
    - echo $SERVICE_PASS | kinit $CERN_USER

build:
  <<: *image
  stage: build
  script:
    - set +e
    - source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh
    - lsetup cmake
    - mkdir $BUILD_DIR
    - cd $BUILD_DIR
    - cmake ${CI_PROJECT_DIR}
    - cmake --build ./
    - source */setup.sh
  artifacts:
    paths:
      - $BUILD_DIR
    name: "${BUILD_DIR}_${CI_JOB_NAME}"
    expire_in: 1d

run_xaod:
  <<: *image
  stage: run
  dependencies: [build]
  script:
  - mv $BUILD_DIR ../
  - cd ../
  - source ${BUILD_DIR}/${AnalysisBase_PLATFORM}/setup.sh
  - mkdir $RUN_DIR
  - cd $RUN_DIR
  - echo $SAMPLE_NAME
  - echo $SAMPLE_NAME > input.txt
  - sed -i '10iNEvents 500' ../${PACKAGE_NAME}/share/Config_ttWCA.txt
  - top-xaod ../${PACKAGE_NAME}/share/Config_ttWCA.txt input.txt

run_utils:
  <<: *image
  stage: test
  dependencies: [build]
  script:
  - mv $BUILD_DIR ../
  - cd ../
  - source ${BUILD_DIR}/${AnalysisBase_PLATFORM}/setup.sh
  - cd ${PACKAGE_NAME}/utils
  - runMMTool $NTUP_NAME Config.conf

load_plotter:
  <<: *image
  stage: test
  dependencies: [build]
  script:
  - mv $BUILD_DIR ../
  - cd ../
  - source ${BUILD_DIR}/${AnalysisBase_PLATFORM}/setup.sh
  - cd ${PACKAGE_NAME}/ttWPlotter
  - python -c "import ROOT; ROOT.gROOT.LoadMacro('Selector/ttWSelector.cxx++');"
  - python -c "import ROOT; ROOT.gROOT.LoadMacro('Plotter/ttWPlotter.cxx++');"
  - python reader.py --help
